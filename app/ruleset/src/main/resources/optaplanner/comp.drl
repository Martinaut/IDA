package optaplanner

// ------------------------------------ IMPORT --------------------------------------
import at.jku.dke.ida.csp.domain.AnalysisSituationEntity
import at.jku.dke.ida.app.ruleset.helpers.CSPRuleHelpers
import org.optaplanner.core.api.score.buildin.hardsoftbigdecimal.HardSoftBigDecimalScoreHolder
import java.math.BigDecimal
import at.jku.dke.ida.app.ruleset.helpers.CSPRuleHelpers

// ------------------------------------ GLOBAL --------------------------------------
global HardSoftBigDecimalScoreHolder scoreHolder;

// ------------------------------------ RULES ---------------------------------------
rule "No cube must be set"
when
    AnalysisSituationEntity(isComparative(), cube != null && !getCube().isEmpty())
then
    scoreHolder.addHardConstraintMatch(kcontext, CSPRuleHelpers.MINUS_ONE);
end

rule "Nothing set"
when
    AnalysisSituationEntity(isComparative(), joinConditionPredicates == null || joinConditionPredicates.isEmpty(),
                            comparativeMeasures == null || comparativeMeasures.isEmpty(),
                            comparativeMeasurePredicates == null || comparativeMeasurePredicates.isEmpty())
then
    scoreHolder.addHardConstraintMatch(kcontext, CSPRuleHelpers.MINUS_ONE);
end

rule "All elements in appropriate cube"
when
    $ase : AnalysisSituationEntity(isComparative())
    eval(!CSPRuleHelpers.allInAppropriateCube($ase))
then
    scoreHolder.addHardConstraintMatch(kcontext, CSPRuleHelpers.MINUS_ONE);
end

rule "Exactly 1 CoI and 1 CoC-Element for scores"
when
    AnalysisSituationEntity(isComparative(), !CSPRuleHelpers.scoreInBothParts(comparativeMeasures))
then
    scoreHolder.addHardConstraintMatch(kcontext, CSPRuleHelpers.MINUS_ONE);
end

rule "At least 1 CoI and 1 Coc-Element for join conditions"
when
    AnalysisSituationEntity(isComparative(), !CSPRuleHelpers.predicateInBothParts(comparativeMeasures))
then
    scoreHolder.addHardConstraintMatch(kcontext, CSPRuleHelpers.MINUS_ONE);
end