package app_rules.value_intent

// ------------------------------------ IMPORT --------------------------------------
import at.jku.dke.ida.rules.interfaces.ValueIntentServiceModel
import at.jku.dke.ida.rules.results.EventConfidenceResult
import at.jku.dke.ida.shared.Event
import at.jku.dke.ida.shared.models.NonComparativeAnalysisSituation
import at.jku.dke.ida.shared.display.ListDisplay
import at.jku.dke.ida.app.ruleset.helpers.UserInput
import at.jku.dke.ida.app.ruleset.helpers.Constants
import at.jku.dke.ida.app.ruleset.interception.models.ValueInputIntentModel

// ------------------------------------ RULES ---------------------------------------
rule "SelectLevel Intent"
    agenda-group "value-intent-determination"
    salience 1
when
    not EventConfidenceResult()
    $as : NonComparativeAnalysisSituation()
    $display : ListDisplay()
    $model : ValueIntentServiceModel(UserInput.isNumber(userInput) &&
                                     UserInput.toInteger(userInput) > 0 &&
                                     UserInput.toInteger(userInput) <= $display.data.size(),
                                     analysisSituation == $as,
                                     displayData == $display,
                                     additionalDataContainsKey(Constants.ADD_DATA_DIMENSION),
                                     additionalDataContainsKey(Constants.ADD_DATA_LEVEL) == false)
    eval($model.getOperation() == Event.NAVIGATE_DICE_NODE_MOVE_DOWN)
then
    $model.addAdditionalData(Constants.ADD_DATA_LEVEL, $display.getData().get(UserInput.toInteger($model.getUserInput()) - 1).getDisplayableId());
    insert(new EventConfidenceResult(Event.MORE_INFORMATION, 1.0));
end

rule "SelectLevel Intent Similarity"
    agenda-group "value-intent-determination"
    salience 1
when
    not EventConfidenceResult()
    $as : NonComparativeAnalysisSituation()
    $display : ListDisplay()
    $model : ValueInputIntentModel(topSimilarity != null,
                                   analysisSituation == $as,
                                   displayData == $display,
                                   additionalDataContainsKey(Constants.ADD_DATA_DIMENSION),
                                   additionalDataContainsKey(Constants.ADD_DATA_LEVEL) == false)
    eval($model.getOperation() == Event.NAVIGATE_DICE_NODE_MOVE_DOWN)
then
    $model.addAdditionalData(Constants.ADD_DATA_LEVEL, $model.getTopSimilarity().getElement().getDisplayableId());
    insert(new EventConfidenceResult(Event.MORE_INFORMATION, $model.getTopSimilarity().getScore()));
end