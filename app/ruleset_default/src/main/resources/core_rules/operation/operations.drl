package core_rules.operation

// ------------------------------------ IMPORT --------------------------------------
import at.jku.dke.ida.rules.interfaces.OperationServiceModel
import at.jku.dke.ida.shared.Event
import at.jku.dke.ida.rules.results.EventConfidenceResult
import org.apache.commons.lang3.math.NumberUtils
import at.jku.dke.ida.app.ruleset.interception.models.OperationModel

// ------------------------------------ RULES ---------------------------------------
rule "Resolve Operation"
    agenda-group "operation-determination"
    salience 100
when
    $model : OperationServiceModel(NumberUtils.isParsable(userInput), possibleOperations.containsKey(NumberUtils.createInteger(userInput)))
then
    insert(new EventConfidenceResult($model.getPossibleOperations().get(NumberUtils.createInteger($model.getUserInput())).getEvent(), 1.0));
end

// TODO
//rule "Resolve Operation Similarity"
//    agenda-group "operation-determination"
//    salience 100
//when
//    $model : OperationModel(topSimilarity != null)
//then
//    insert(new EventConfidenceResult($model.getTopSimilarity().getElement().getDisplayableId(), $model.getTopSimilarity().getScore()));
//end

rule "Invalid Operation Similarity"
    agenda-group "operation-determination"
    salience 2
when
    $model : OperationModel(topSimilarity == null)
    not EventConfidenceResult()
then
    insert(new EventConfidenceResult(Event.INVALID_INPUT, 1.0));
end

rule "Invalid Operation Number"
    agenda-group "operation-determination"
    salience 1
when
    $model : OperationServiceModel(!NumberUtils.isParsable(userInput) || !possibleOperations.containsKey(NumberUtils.createInteger(userInput)))
    not EventConfidenceResult()
then
    insert(new EventConfidenceResult(Event.INVALID_INPUT, 1.0));
end

// TODO: e.g. "option 1" "the first option"